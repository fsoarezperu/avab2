// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  orders Order[]
  products    Product[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Decimal
  stock       Int
  imageUrl    String?
  sku         String   @unique
  brand       String?
  category    String?
  weight      Decimal?
  status      String   @default("active")
  taxable     Boolean  @default(true)
  visibility  String   @default("visible")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]
  createdBy   User     @relation(fields: [userId], references: [id])
  userId      String
}

model Order {
  id          String      @id @default(cuid())
  orderNumber String      @unique
  customerId  String
  customer    Customer    @relation(fields: [customerId], references: [id])
  total       Decimal
  status      String      @default("Processing")
  paymentStatus String    @default("Pending")
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal
}

model Customer {
  id            String    @id @default(cuid())
  email         String    @unique
  firstName     String
  lastName      String
  company       String?   // opcional
  phone         String?   // opcional
  notes         String?   // opcional, puede ser un texto largo
  customerGroup String?   // 'retail', 'wholesale', 'vip'
  storeCredit   Decimal  @default(0)
  status        String   @default("active") // 'active', 'inactive'
  orders        Order[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}

enum Client_type {
  REFERAL
  ONLINE
  NEW
  DO_NOT_CONTACT
  VERIFIED
}
